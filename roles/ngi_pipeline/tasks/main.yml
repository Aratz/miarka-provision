---

- name: "Get list of conda environments"
  shell: "conda env list"
  register: py_venv_exists

- name: Setup virtual env with python{{ python3_version }} and install dependencies
  shell: "conda create -n {{ NGI_venv_name }} pip python={{ python3_version }}"
  when: not NGI_venv_name in py_venv_exists.stdout|split

- name: Fetch ngi_pipeline from github
  git:
    repo: "{{ ngi_pipeline_repo }}"
    dest: "{{ ngi_pipeline_dest }}"
    version: "{{ ngi_pipeline_version }}"
    force: yes

- name: Install ngi_pipeline requirements
  pip:
    requirements: "{{ ngi_pipeline_dest }}/requirements.txt"
    executable: "{{ ngi_pipeline_venv }}/bin/pip"

- name: Install ngi_pipeline
  pip:
    name: "file:{{ ngi_pipeline_dest }}"
    executable: "{{ ngi_pipeline_venv }}/bin/pip"

- name: Store ngi_pipeline version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "NGI Pipeline: {{ ngi_pipeline_version }}"

- name: Create ngi_resources/piper folder
  file:
    name: "{{ ngi_resources }}/piper"
    state: directory

- name: Deploy GATK license key
  copy:
    src: files/{{ gatk_key }}
    dest: "{{ ngi_resources }}/piper/{{ gatk_key }}"
  ignore_errors: true

- name: Deploy fastqc conf for miarka
  template:
    src: fastq_screen.miarka.conf.j2
    dest: "{{ ngi_pipeline_conf }}/fastq_screen.miarka.conf"

- name: Create ngi_pipeline wildwest directory
  file:
    path: "{{ proj_root }}"
    state: directory
  when: deployment_environment in ["staging", "devel"]

- name: Deploy miarka ngi_pipeline config for {{ site }}
  template:
    src: miarka_ngi_config.yaml.j2
    dest: "{{ ngi_pipeline_conf }}/{{ ngi_pipeline_config }}"

- name: Deploy script for creating site specific ngi_pipeline deliverables
  template:
    src: create_ngi_pipeline_deliverables.sh.j2
    dest: "{{ ngi_resources }}/create_ngi_pipeline_deliverables_{{ site }}.sh"

- name: add static folders to be created
  set_fact:
    static_folders: "{{ static_folders + [ngi_log_path, ngi_pipeline_db_path, ngi_softlinks] }}"

- name: add {{ site }}-specific folders to be created
  set_fact:
    static_folders: "{{ static_folders + [[proj_root, uppmax_project, 'genotype_data', 'incoming'] | join('/'), [proj_root, uppmax_project, 'genotype_data', 'archive'] | join('/')] }}"
  when: site == 'sthlm'

- name: add static commands to be run
  set_fact:
    static_commands: "{{ static_commands + ['. ' ~ ngi_resources ~ '/create_ngi_pipeline_deliverables_' ~ site ~ '.sh'] }}"
