---
- include: dependencies.yml

- name: Fetch ngi_reports from github
  git:
    repo: "{{ ngi_reports_repo }}"
    dest: "{{ ngi_reports_dest }}"
    version: "{{ ngi_reports_version }}"
    force: yes
    recursive: yes

- name: Install ngi_reports
  pip:
    name: "file:{{ ngi_reports_dest }}"
    executable: "{{ ngi_pipeline_venv }}/bin/pip"
    editable: yes

- name: Create ngi_reports conf file
  template:
    src: ngi_reports.conf.j2
    dest: "{{ ngi_pipeline_conf }}/ngi_reports_{{ site }}.conf"

- name: Export NGI_REPORTS_CONFIG via sourceme_sthlm
  lineinfile:
    dest: "{{ ngi_pipeline_conf }}/{{ bash_env_script }}"
    line: export NGI_REPORTS_CONFIG={{ ngi_pipeline_conf }}/ngi_reports_{{ site }}.conf
    backup: no

- name: Set alias for regenerating project summary report
  lineinfile:
    dest: "{{ ngi_pipeline_conf }}/{{ bash_env_script }}"
    line: >
          alias make_report="{{ ngi_pipeline_venv }}/bin/ngi_reports project_summary -md"
    backup: no

- name: add static folders to be created
  set_fact:
    static_folders: "{{ static_folders + [ngi_log_path] }}"

- name: Store ngi_reports tool version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "{{ NGI_venv_name }}, {{ item.tool_name }}: {{ item.tool_version }}"
  with_items:
    - { tool_name: "ngi_reports", tool_version: "{{ ngi_reports_version }}" }
    - { tool_name: "ngi_visualizations", tool_version: "{{ ngi_visual_version }}" }
