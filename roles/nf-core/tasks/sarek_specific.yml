
- name: pull vep, snpeff genome-specific singularity images
  command: "singularity pull --name nfcore-{{ container.0 }}-{{ release }}.{{ container.1 }}.img {{ nf_core_container_repo }}/{{ container.0 }}:{{ release }}.{{ container.1 }}"
  environment: "{{ nf_core_vars }}"
  args:
    chdir: "{{ ngi_containers }}/{{ pipeline }}"
    creates: "{{ ngi_containers }}/{{ pipeline }}/nfcore-{{ container.0 }}-{{ release }}.{{ container.1 }}.img"
  ignore_errors: true
  with_nested:
    - "{{ pipeline_specific_containers }}"
    - "{{ pipeline_genomes }}"
  loop_control:
    loop_var: container

- name: update alias for pipeline
  lineinfile:
    dest: "{{ ngi_pipeline_conf }}/{{ cfg.script }}"
    regexp: ^(alias {{ pipeline }}=.*)(')$
    line: '\1 --project {{ cfg.project_id }} --custom_config_base {{ sw_path }}{{ pipeline }}/configs/ --igenomes_ignore\2'
    state: present
    backrefs: yes
    backup: no
  with_items:
    - { script: "{{ bash_env_sthlm_script }}", project_id: "{{ ngi_pipeline_sthlm_delivery }}" }
    - { script: "{{ bash_env_upps_script }}", project_id: "{{ ngi_pipeline_upps_delivery }}" }
  loop_control:
    loop_var: cfg

- name: Create recalibration script and add to TACA resources
  template:
    src: "apply_recalibration.sh.j2"
    dest: "{{ ngi_resources }}/TACA/apply_recalibration.sh"

- name: Create Delivery READMEs and add to TACA resources
  template:
    src: "DELIVERY.README.SAREK.txt.j2"
    dest: "{{ ngi_resources }}/TACA/{{ sarek_site }}/DELIVERY.README.SAREK.txt"
  with_items:
    - upps
  loop_control:
    loop_var: sarek_site
