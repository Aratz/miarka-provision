--- 

  # These tasks need to run before any other roles, to setup proper 
  # environment variables depending on we're deploying to production, 
  # staging, or development/test purposes. 

  - block:

    - name: set charon envs for {{ deployment_environment }}
      set_fact:
        charon_base_url: "{{ charon_base_url_stage }}"
        charon_api_token_sthlm: "{{ charon_api_token_sthlm_stage }}"
        charon_api_token_upps: "{{ charon_api_token_upps_stage }}"

    - name: set statusdb config file for {{ deployment_environment }}
      set_fact:
        statusdb_creds: statusdb_creds_stage.yml

    when: deployment_environment == "devel"

  - block:

    - name: set path to staging incoming dir
      set_fact:
        incoming_dir_upps: "{{ proj_root }}/{{ ngi_pipeline_upps_delivery }}/incoming/"
        incoming_dir_sthlm: "{{ proj_root }}/{{ ngi_pipeline_sthlm_delivery }}/incoming/"

    - name: create staging proj root dir (wildwest) and incoming dirs
      file: path={{ item }} state=directory mode="g+rwxs,u+rwx"
      with_items:
        - "{{ proj_root }}"
        - "{{ incoming_dir_upps }}"
        - "{{ incoming_dir_sthlm }}"

    - name: set charon envs for {{ deployment_environment }}
      set_fact:
        charon_base_url: "{{ charon_base_url_stage }}"
        charon_api_token_sthlm: "{{ charon_api_token_sthlm_stage }}"
        charon_api_token_upps: "{{ charon_api_token_upps_stage }}"

    - name: set statusdb config file for {{ deployment_environment }}
      set_fact:
        statusdb_creds: statusdb_creds_stage.yml

    when: deployment_environment == "staging"

  - block:

    - name: set charon envs for {{ deployment_environment }}
      set_fact:
        charon_base_url: "{{ charon_base_url_prod }}"
        charon_api_token_sthlm: "{{ charon_api_token_sthlm_prod }}"
        charon_api_token_upps: "{{ charon_api_token_upps_prod }}"

    - name: set statusdb config file for {{ deployment_environment }}
      set_fact:
        statusdb_creds: statusdb_creds_prod.yml

    when: deployment_environment == "production"

  - stat: path={{ root_path }}
    register: p

  - fail: msg="Aborting! Directory {{ root_path }} already exists. Remove the dir or call playbook with '-e deployment_override=true' if you want to deploy anyway."
    when: deployment_override == false and p.stat.isdir is defined and p.stat.isdir
